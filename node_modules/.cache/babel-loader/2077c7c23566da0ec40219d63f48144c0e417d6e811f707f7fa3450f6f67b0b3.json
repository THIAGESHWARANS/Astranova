{"ast":null,"code":"var _jsxFileName = \"E:\\\\Astranove symposium\\\\Astranova\\\\src\\\\event-detail-page\\\\technical-events\\\\ReverseCoding.js\";\nimport React from \"react\";\nimport SingleEventPage from \"../../components/single-event-page/SingleEventPage\";\nimport Reversecoding from \"../../assets/event-images/reversecoding.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reverseCoding = {\n  image: Reversecoding,\n  description: \"Think you have what it takes to reverse engineer the code? Join us for a Reverse Coding event where you'll need to decipher the logic behind the program and recreate it from scratch!\",\n  type: \"Technical Event\",\n  eventName: \"Reverse Coding\",\n  dateTime: \"March 08, 09:30AM - 11:30AM\",\n  venue: \"IT-443\",\n  rules: [\"Solo Participation\", \"Analyzing the input and output is necessary to determine the logic\",\n  // \"The time given to solve the problem is 90 minutes\",\n  \"Questions consist of only the sample input and output. The participants must determine the logic and implement it through code\", \"The code can be written in any programming language\", \"Participants should bring their own laptops for the event\", \"Any form of academic dishonesty, including plagiarism and cheating, is not permitted.\", \"One who solve more test cases in given amount of time is declared as winner\"],\n  firstprize: 1000,\n  secondprize: 700,\n  thirdprize: 0,\n  contact: [{\n    name: \"Pradeep C\",\n    phoneNo: \"9344306600\"\n  }, {\n    name: \"Aruneshwar T K\",\n    phoneNo: \"7200986816\"\n  }]\n};\nconst ReverseCoding = () => {\n  return /*#__PURE__*/_jsxDEV(SingleEventPage, {\n    eventDetails: reverseCoding\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n_c = ReverseCoding;\nexport default ReverseCoding;\nvar _c;\n$RefreshReg$(_c, \"ReverseCoding\");","map":{"version":3,"names":["React","SingleEventPage","Reversecoding","jsxDEV","_jsxDEV","reverseCoding","image","description","type","eventName","dateTime","venue","rules","firstprize","secondprize","thirdprize","contact","name","phoneNo","ReverseCoding","eventDetails","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Astranove symposium/Astranova/src/event-detail-page/technical-events/ReverseCoding.js"],"sourcesContent":["import React from \"react\";\r\nimport SingleEventPage from \"../../components/single-event-page/SingleEventPage\";\r\nimport Reversecoding from \"../../assets/event-images/reversecoding.jpg\";\r\n\r\nconst reverseCoding = {\r\n  image: Reversecoding,\r\n  description:\r\n    \"Think you have what it takes to reverse engineer the code? Join us for a Reverse Coding event where you'll need to decipher the logic behind the program and recreate it from scratch!\",\r\n  type: \"Technical Event\",\r\n  eventName: \"Reverse Coding\",\r\n  dateTime: \"March 08, 09:30AM - 11:30AM\",\r\n  venue: \"IT-443\",\r\n  rules: [\r\n    \"Solo Participation\",\r\n    \"Analyzing the input and output is necessary to determine the logic\",\r\n    // \"The time given to solve the problem is 90 minutes\",\r\n    \"Questions consist of only the sample input and output. The participants must determine the logic and implement it through code\",\r\n    \"The code can be written in any programming language\",\r\n    \"Participants should bring their own laptops for the event\",\r\n    \"Any form of academic dishonesty, including plagiarism and cheating, is not permitted.\",\r\n    \"One who solve more test cases in given amount of time is declared as winner\",\r\n  ],\r\n\r\n  firstprize: 1000,\r\n  secondprize: 700,\r\n  thirdprize: 0,\r\n  contact: [\r\n    {\r\n      name: \"Pradeep C\",\r\n      phoneNo: \"9344306600\",\r\n    },\r\n    {\r\n      name: \"Aruneshwar T K\",\r\n      phoneNo: \"7200986816\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst ReverseCoding = () => {\r\n  return <SingleEventPage eventDetails={reverseCoding} />;\r\n};\r\n\r\nexport default ReverseCoding;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,oDAAoD;AAChF,OAAOC,aAAa,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAEJ,aAAa;EACpBK,WAAW,EACT,wLAAwL;EAC1LC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAE,gBAAgB;EAC3BC,QAAQ,EAAE,6BAA6B;EACvCC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE,CACL,oBAAoB,EACpB,oEAAoE;EACpE;EACA,gIAAgI,EAChI,qDAAqD,EACrD,2DAA2D,EAC3D,uFAAuF,EACvF,6EAA6E,CAC9E;EAEDC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,GAAG;EAChBC,UAAU,EAAE,CAAC;EACbC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE;EACX,CAAC,EACD;IACED,IAAI,EAAE,gBAAgB;IACtBC,OAAO,EAAE;EACX,CAAC;AAEL,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBAAOf,OAAA,CAACH,eAAe;IAACmB,YAAY,EAAEf;EAAc;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAACC,EAAA,GAFIN,aAAa;AAInB,eAAeA,aAAa;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}